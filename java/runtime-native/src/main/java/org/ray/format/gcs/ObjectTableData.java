package org.ray.format.gcs;
// automatically generated by the FlatBuffers compiler, do not modify

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class ObjectTableData extends Table {
  public static ObjectTableData getRootAsObjectTableData(ByteBuffer _bb) { return getRootAsObjectTableData(_bb, new ObjectTableData()); }
  public static ObjectTableData getRootAsObjectTableData(ByteBuffer _bb, ObjectTableData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public ObjectTableData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long objectSize() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String manager() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer managerAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer managerInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public boolean isEviction() { int o = __offset(8); return o != 0 ? 0!=bb.get(o + bb_pos) : false; }
  public int numEvictions() { int o = __offset(10); return o != 0 ? bb.getInt(o + bb_pos) : 0; }

  public static int createObjectTableData(FlatBufferBuilder builder,
      long object_size,
      int managerOffset,
      boolean is_eviction,
      int num_evictions) {
    builder.startObject(4);
    ObjectTableData.addObjectSize(builder, object_size);
    ObjectTableData.addNumEvictions(builder, num_evictions);
    ObjectTableData.addManager(builder, managerOffset);
    ObjectTableData.addIsEviction(builder, is_eviction);
    return ObjectTableData.endObjectTableData(builder);
  }

  public static void startObjectTableData(FlatBufferBuilder builder) { builder.startObject(4); }
  public static void addObjectSize(FlatBufferBuilder builder, long objectSize) { builder.addLong(0, objectSize, 0L); }
  public static void addManager(FlatBufferBuilder builder, int managerOffset) { builder.addOffset(1, managerOffset, 0); }
  public static void addIsEviction(FlatBufferBuilder builder, boolean isEviction) { builder.addBoolean(2, isEviction, false); }
  public static void addNumEvictions(FlatBufferBuilder builder, int numEvictions) { builder.addInt(3, numEvictions, 0); }
  public static int endObjectTableData(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

