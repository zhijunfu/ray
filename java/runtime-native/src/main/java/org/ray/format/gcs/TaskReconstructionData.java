package org.ray.format.gcs;
// automatically generated by the FlatBuffers compiler, do not modify

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class TaskReconstructionData extends Table {
  public static TaskReconstructionData getRootAsTaskReconstructionData(ByteBuffer _bb) { return getRootAsTaskReconstructionData(_bb, new TaskReconstructionData()); }
  public static TaskReconstructionData getRootAsTaskReconstructionData(ByteBuffer _bb, TaskReconstructionData obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public TaskReconstructionData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int numExecutions() { int o = __offset(4); return o != 0 ? bb.getInt(o + bb_pos) : 0; }
  public String nodeManagerId() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nodeManagerIdAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer nodeManagerIdInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }

  public static int createTaskReconstructionData(FlatBufferBuilder builder,
      int num_executions,
      int node_manager_idOffset) {
    builder.startObject(2);
    TaskReconstructionData.addNodeManagerId(builder, node_manager_idOffset);
    TaskReconstructionData.addNumExecutions(builder, num_executions);
    return TaskReconstructionData.endTaskReconstructionData(builder);
  }

  public static void startTaskReconstructionData(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addNumExecutions(FlatBufferBuilder builder, int numExecutions) { builder.addInt(0, numExecutions, 0); }
  public static void addNodeManagerId(FlatBufferBuilder builder, int nodeManagerIdOffset) { builder.addOffset(1, nodeManagerIdOffset, 0); }
  public static int endTaskReconstructionData(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

