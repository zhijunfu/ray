package org.ray.format.gcs;
// automatically generated by the FlatBuffers compiler, do not modify

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class GcsTableEntry extends Table {
  public static GcsTableEntry getRootAsGcsTableEntry(ByteBuffer _bb) { return getRootAsGcsTableEntry(_bb, new GcsTableEntry()); }
  public static GcsTableEntry getRootAsGcsTableEntry(ByteBuffer _bb, GcsTableEntry obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public GcsTableEntry __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String id() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer idAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer idInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public String entries(int j) { int o = __offset(6); return o != 0 ? __string(__vector(o) + j * 4) : null; }
  public int entriesLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }

  public static int createGcsTableEntry(FlatBufferBuilder builder,
      int idOffset,
      int entriesOffset) {
    builder.startObject(2);
    GcsTableEntry.addEntries(builder, entriesOffset);
    GcsTableEntry.addId(builder, idOffset);
    return GcsTableEntry.endGcsTableEntry(builder);
  }

  public static void startGcsTableEntry(FlatBufferBuilder builder) { builder.startObject(2); }
  public static void addId(FlatBufferBuilder builder, int idOffset) { builder.addOffset(0, idOffset, 0); }
  public static void addEntries(FlatBufferBuilder builder, int entriesOffset) { builder.addOffset(1, entriesOffset, 0); }
  public static int createEntriesVector(FlatBufferBuilder builder, int[] data) { builder.startVector(4, data.length, 4); for (int i = data.length - 1; i >= 0; i--) builder.addOffset(data[i]); return builder.endVector(); }
  public static void startEntriesVector(FlatBufferBuilder builder, int numElems) { builder.startVector(4, numElems, 4); }
  public static int endGcsTableEntry(FlatBufferBuilder builder) {
    int o = builder.endObject();
    return o;
  }
}

